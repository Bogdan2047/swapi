{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getPath = getPath;\nexports.interpolateVariables = void 0;\nfunction _jestGetType() {\n  const data = require('jest-get-type');\n  _jestGetType = function () {\n    return data;\n  };\n  return data;\n}\nfunction _prettyFormat() {\n  const data = require('pretty-format');\n  _prettyFormat = function () {\n    return data;\n  };\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst interpolateVariables = (title, template, index) => Object.keys(template).reduce(getMatchingKeyPaths(title), []) // aka flatMap\n.reduce(replaceKeyPathWithValue(template), title).replace('$#', '' + index);\nexports.interpolateVariables = interpolateVariables;\nconst getMatchingKeyPaths = title => (matches, key) => matches.concat(title.match(new RegExp(`\\\\$${key}[\\\\.\\\\w]*`, 'g')) || []);\nconst replaceKeyPathWithValue = template => (title, match) => {\n  const keyPath = match.replace('$', '').split('.');\n  const value = getPath(template, keyPath);\n  if ((0, _jestGetType().isPrimitive)(value)) {\n    return title.replace(match, String(value));\n  }\n  return title.replace(match, (0, _prettyFormat().format)(value, {\n    maxDepth: 1,\n    min: true\n  }));\n};\n/* eslint import/export: 0*/\n\nfunction getPath(template, _ref) {\n  let [head, ...tail] = _ref;\n  if (!head || !template.hasOwnProperty || !template.hasOwnProperty(head)) return template;\n  return getPath(template[head], tail);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getPath","interpolateVariables","_jestGetType","data","require","_prettyFormat","title","template","index","keys","reduce","getMatchingKeyPaths","replaceKeyPathWithValue","replace","matches","key","concat","match","RegExp","keyPath","split","isPrimitive","String","format","maxDepth","min","_ref","head","tail","hasOwnProperty"],"sources":["/Users/Bohdan/Desktop/swap/node_modules/jest-each/build/table/interpolation.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getPath = getPath;\nexports.interpolateVariables = void 0;\n\nfunction _jestGetType() {\n  const data = require('jest-get-type');\n\n  _jestGetType = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = require('pretty-format');\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst interpolateVariables = (title, template, index) =>\n  Object.keys(template)\n    .reduce(getMatchingKeyPaths(title), []) // aka flatMap\n    .reduce(replaceKeyPathWithValue(template), title)\n    .replace('$#', '' + index);\n\nexports.interpolateVariables = interpolateVariables;\n\nconst getMatchingKeyPaths = title => (matches, key) =>\n  matches.concat(title.match(new RegExp(`\\\\$${key}[\\\\.\\\\w]*`, 'g')) || []);\n\nconst replaceKeyPathWithValue = template => (title, match) => {\n  const keyPath = match.replace('$', '').split('.');\n  const value = getPath(template, keyPath);\n\n  if ((0, _jestGetType().isPrimitive)(value)) {\n    return title.replace(match, String(value));\n  }\n\n  return title.replace(\n    match,\n    (0, _prettyFormat().format)(value, {\n      maxDepth: 1,\n      min: true\n    })\n  );\n};\n/* eslint import/export: 0*/\n\nfunction getPath(template, [head, ...tail]) {\n  if (!head || !template.hasOwnProperty || !template.hasOwnProperty(head))\n    return template;\n  return getPath(template[head], tail);\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGA,OAAO;AACzBF,OAAO,CAACG,oBAAoB,GAAG,KAAK,CAAC;AAErC,SAASC,YAAYA,CAAA,EAAG;EACtB,MAAMC,IAAI,GAAGC,OAAO,CAAC,eAAe,CAAC;EAErCF,YAAY,GAAG,SAAAA,CAAA,EAAY;IACzB,OAAOC,IAAI;EACb,CAAC;EAED,OAAOA,IAAI;AACb;AAEA,SAASE,aAAaA,CAAA,EAAG;EACvB,MAAMF,IAAI,GAAGC,OAAO,CAAC,eAAe,CAAC;EAErCC,aAAa,GAAG,SAAAA,CAAA,EAAY;IAC1B,OAAOF,IAAI;EACb,CAAC;EAED,OAAOA,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,oBAAoB,GAAGA,CAACK,KAAK,EAAEC,QAAQ,EAAEC,KAAK,KAClDZ,MAAM,CAACa,IAAI,CAACF,QAAQ,CAAC,CAClBG,MAAM,CAACC,mBAAmB,CAACL,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;AAAA,CACvCI,MAAM,CAACE,uBAAuB,CAACL,QAAQ,CAAC,EAAED,KAAK,CAAC,CAChDO,OAAO,CAAC,IAAI,EAAE,EAAE,GAAGL,KAAK,CAAC;AAE9BV,OAAO,CAACG,oBAAoB,GAAGA,oBAAoB;AAEnD,MAAMU,mBAAmB,GAAGL,KAAK,IAAI,CAACQ,OAAO,EAAEC,GAAG,KAChDD,OAAO,CAACE,MAAM,CAACV,KAAK,CAACW,KAAK,CAAC,IAAIC,MAAM,CAAE,MAAKH,GAAI,WAAU,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AAE1E,MAAMH,uBAAuB,GAAGL,QAAQ,IAAI,CAACD,KAAK,EAAEW,KAAK,KAAK;EAC5D,MAAME,OAAO,GAAGF,KAAK,CAACJ,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACO,KAAK,CAAC,GAAG,CAAC;EACjD,MAAMrB,KAAK,GAAGC,OAAO,CAACO,QAAQ,EAAEY,OAAO,CAAC;EAExC,IAAI,CAAC,CAAC,EAAEjB,YAAY,EAAE,CAACmB,WAAW,EAAEtB,KAAK,CAAC,EAAE;IAC1C,OAAOO,KAAK,CAACO,OAAO,CAACI,KAAK,EAAEK,MAAM,CAACvB,KAAK,CAAC,CAAC;EAC5C;EAEA,OAAOO,KAAK,CAACO,OAAO,CAClBI,KAAK,EACL,CAAC,CAAC,EAAEZ,aAAa,EAAE,CAACkB,MAAM,EAAExB,KAAK,EAAE;IACjCyB,QAAQ,EAAE,CAAC;IACXC,GAAG,EAAE;EACP,CAAC,CAAC,CACH;AACH,CAAC;AACD;;AAEA,SAASzB,OAAOA,CAACO,QAAQ,EAAAmB,IAAA,EAAmB;EAAA,IAAjB,CAACC,IAAI,EAAE,GAAGC,IAAI,CAAC,GAAAF,IAAA;EACxC,IAAI,CAACC,IAAI,IAAI,CAACpB,QAAQ,CAACsB,cAAc,IAAI,CAACtB,QAAQ,CAACsB,cAAc,CAACF,IAAI,CAAC,EACrE,OAAOpB,QAAQ;EACjB,OAAOP,OAAO,CAACO,QAAQ,CAACoB,IAAI,CAAC,EAAEC,IAAI,CAAC;AACtC"},"metadata":{},"sourceType":"script","externalDependencies":[]}