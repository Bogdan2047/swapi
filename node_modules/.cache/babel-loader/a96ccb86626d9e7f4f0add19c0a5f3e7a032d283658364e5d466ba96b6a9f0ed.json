{"ast":null,"code":"var _jsxFileName = \"/Users/Bohdan/Desktop/swap/src/context/info.js\",\n  _s = $RefreshSig$();\nimport react from \"react\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Info = props => {\n  _s();\n  const params = useParams();\n  const filmId = params.id;\n  let findFilm = props.data.find(item => {\n    if (item.episode_id == filmId) {\n      return true;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"card text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: findFilm.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Year: \", findFilm.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        class: \"card-title\",\n        children: findFilm.opening_crawl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        class: \"card-text\",\n        children: [\"Director: \", findFilm.director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        class: \"card-text\",\n        children: [\"Producer: \", findFilm.producer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-footer text-muted\",\n      children: \"2 \\u0434\\u043D\\u044F \\u0441\\u043F\\u0443\\u0441\\u0442\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Info, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["react","useParams","jsxDEV","_jsxDEV","Info","props","_s","params","filmId","id","findFilm","data","find","item","episode_id","class","children","title","fileName","_jsxFileName","lineNumber","columnNumber","release_date","opening_crawl","director","producer","_c","$RefreshReg$"],"sources":["/Users/Bohdan/Desktop/swap/src/context/info.js"],"sourcesContent":["import react from \"react\"\nimport { useParams } from \"react-router\";\n\n\nexport const Info = (props) => {\n\nconst params = useParams();\nconst filmId = params.id;\n\n\nlet findFilm = props.data.find((item) => {\n    if(item.episode_id == filmId){\n        return true\n    }\n})\n\n\n    return(\n        <div class=\"card text-center\">\n            <div class=\"card-header\">\n                <h2>{findFilm.title}</h2>\n                <h4>Year: {findFilm.release_date}</h4>\n            </div>\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{findFilm.opening_crawl}</h5>\n                <h4 class=\"card-text\">Director: {findFilm.director}</h4>\n                <h4 class=\"card-text\">Producer: {findFilm.producer}</h4>\n            </div>\n            <div class=\"card-footer text-muted\">\n                2 дня спустя\n            </div>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,OAAO,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE/B,MAAMC,MAAM,GAAGN,SAAS,EAAE;EAC1B,MAAMO,MAAM,GAAGD,MAAM,CAACE,EAAE;EAGxB,IAAIC,QAAQ,GAAGL,KAAK,CAACM,IAAI,CAACC,IAAI,CAAEC,IAAI,IAAK;IACrC,IAAGA,IAAI,CAACC,UAAU,IAAIN,MAAM,EAAC;MACzB,OAAO,IAAI;IACf;EACJ,CAAC,CAAC;EAGE,oBACIL,OAAA;IAAKY,KAAK,EAAC,kBAAkB;IAAAC,QAAA,gBACzBb,OAAA;MAAKY,KAAK,EAAC,aAAa;MAAAC,QAAA,gBACpBb,OAAA;QAAAa,QAAA,EAAKN,QAAQ,CAACO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzBlB,OAAA;QAAAa,QAAA,GAAI,QAAM,EAACN,QAAQ,CAACY,YAAY;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpC,eACNlB,OAAA;MAAKY,KAAK,EAAC,WAAW;MAAAC,QAAA,gBAClBb,OAAA;QAAIY,KAAK,EAAC,YAAY;QAAAC,QAAA,EAAEN,QAAQ,CAACa;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACpDlB,OAAA;QAAIY,KAAK,EAAC,WAAW;QAAAC,QAAA,GAAC,YAAU,EAACN,QAAQ,CAACc,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACxDlB,OAAA;QAAIY,KAAK,EAAC,WAAW;QAAAC,QAAA,GAAC,YAAU,EAACN,QAAQ,CAACe,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtD,eACNlB,OAAA;MAAKY,KAAK,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAEpC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAf,EAAA,CA7BYF,IAAI;EAAA,QAEFH,SAAS;AAAA;AAAAyB,EAAA,GAFXtB,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}