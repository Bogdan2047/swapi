{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = template;\nvar _interpolation = require('./interpolation');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction template(title, headings, row) {\n  const table = convertRowToTable(row, headings);\n  const templates = convertTableToTemplates(table, headings);\n  return templates.map((template, index) => ({\n    arguments: [template],\n    title: (0, _interpolation.interpolateVariables)(title, template, index)\n  }));\n}\nconst convertRowToTable = (row, headings) => Array.from({\n  length: row.length / headings.length\n}).map((_, index) => row.slice(index * headings.length, index * headings.length + headings.length));\nconst convertTableToTemplates = (table, headings) => table.map(row => row.reduce((acc, value, index) => Object.assign(acc, {\n  [headings[index]]: value\n}), {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","default","template","_interpolation","require","title","headings","row","table","convertRowToTable","templates","convertTableToTemplates","map","index","arguments","interpolateVariables","Array","from","length","_","slice","reduce","acc","assign"],"sources":["/Users/Bohdan/Desktop/swap/node_modules/jest-each/build/table/template.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = template;\n\nvar _interpolation = require('./interpolation');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction template(title, headings, row) {\n  const table = convertRowToTable(row, headings);\n  const templates = convertTableToTemplates(table, headings);\n  return templates.map((template, index) => ({\n    arguments: [template],\n    title: (0, _interpolation.interpolateVariables)(title, template, index)\n  }));\n}\n\nconst convertRowToTable = (row, headings) =>\n  Array.from({\n    length: row.length / headings.length\n  }).map((_, index) =>\n    row.slice(\n      index * headings.length,\n      index * headings.length + headings.length\n    )\n  );\n\nconst convertTableToTemplates = (table, headings) =>\n  table.map(row =>\n    row.reduce(\n      (acc, value, index) =>\n        Object.assign(acc, {\n          [headings[index]]: value\n        }),\n      {}\n    )\n  );\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,QAAQ;AAE1B,IAAIC,cAAc,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,QAAQA,CAACG,KAAK,EAAEC,QAAQ,EAAEC,GAAG,EAAE;EACtC,MAAMC,KAAK,GAAGC,iBAAiB,CAACF,GAAG,EAAED,QAAQ,CAAC;EAC9C,MAAMI,SAAS,GAAGC,uBAAuB,CAACH,KAAK,EAAEF,QAAQ,CAAC;EAC1D,OAAOI,SAAS,CAACE,GAAG,CAAC,CAACV,QAAQ,EAAEW,KAAK,MAAM;IACzCC,SAAS,EAAE,CAACZ,QAAQ,CAAC;IACrBG,KAAK,EAAE,CAAC,CAAC,EAAEF,cAAc,CAACY,oBAAoB,EAAEV,KAAK,EAAEH,QAAQ,EAAEW,KAAK;EACxE,CAAC,CAAC,CAAC;AACL;AAEA,MAAMJ,iBAAiB,GAAGA,CAACF,GAAG,EAAED,QAAQ,KACtCU,KAAK,CAACC,IAAI,CAAC;EACTC,MAAM,EAAEX,GAAG,CAACW,MAAM,GAAGZ,QAAQ,CAACY;AAChC,CAAC,CAAC,CAACN,GAAG,CAAC,CAACO,CAAC,EAAEN,KAAK,KACdN,GAAG,CAACa,KAAK,CACPP,KAAK,GAAGP,QAAQ,CAACY,MAAM,EACvBL,KAAK,GAAGP,QAAQ,CAACY,MAAM,GAAGZ,QAAQ,CAACY,MAAM,CAC1C,CACF;AAEH,MAAMP,uBAAuB,GAAGA,CAACH,KAAK,EAAEF,QAAQ,KAC9CE,KAAK,CAACI,GAAG,CAACL,GAAG,IACXA,GAAG,CAACc,MAAM,CACR,CAACC,GAAG,EAAEtB,KAAK,EAAEa,KAAK,KAChBhB,MAAM,CAAC0B,MAAM,CAACD,GAAG,EAAE;EACjB,CAAChB,QAAQ,CAACO,KAAK,CAAC,GAAGb;AACrB,CAAC,CAAC,EACJ,CAAC,CAAC,CACH,CACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}