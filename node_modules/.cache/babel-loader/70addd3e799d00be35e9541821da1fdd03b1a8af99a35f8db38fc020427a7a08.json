{"ast":null,"code":"var _jsxFileName = \"/Users/Bohdan/Desktop/swap/src/context/blockFilm.js\";\nimport react from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet datas = [];\nconst BlockFilm = props => {\n  let showInfo = () => {\n    props.updateData(datas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: props.data.map(el => el.map(item => (datas.push(item), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Year: \", item.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this)]\n      }, item.episode_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: item.opening_crawl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: item.director\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/info/${item}`,\n          className: \"btn btn-primary\",\n          onClick: showInfo,\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \\u0444\\u0438\\u043B\\u044C\\u043C\"\n        }, item.episode_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true))))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = BlockFilm;\nexport default BlockFilm;\nvar _c;\n$RefreshReg$(_c, \"BlockFilm\");","map":{"version":3,"names":["react","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","datas","BlockFilm","props","showInfo","updateData","className","children","data","map","el","item","push","title","fileName","_jsxFileName","lineNumber","columnNumber","release_date","episode_id","opening_crawl","director","to","onClick","_c","$RefreshReg$"],"sources":["/Users/Bohdan/Desktop/swap/src/context/blockFilm.js"],"sourcesContent":["import react from \"react\"\nimport { Link } from \"react-router-dom\";\n\nlet datas = []\n\nconst BlockFilm = (props) => {\n\nlet showInfo = () => {\n    props.updateData(datas)\n}\n\nreturn (\n        <div className=\"card\">\n            {props.data.map((el) => (\n                el.map((item) => (\n                    datas.push(item),\n                    <>\n                        <div className=\"card-header\" key={item.episode_id}>\n                            <h1>{item.title}</h1>\n                            <h3>Year: {item.release_date}</h3>\n                        </div>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{item.opening_crawl}</h5>\n                            <p className=\"card-text\">{item.director}</p>\n                                <Link\n                                to={`/info/${item}`}\n                                 className=\"btn btn-primary\" \n                                 onClick={showInfo}\n                                 key={item.episode_id}\n                                 >\n                                    Перейти на фильм\n                                </Link>\n                        </div>\n                    </>\n                ))   \n            ))}  \n        </div>\n)\n\n}\n\nexport default BlockFilm;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,IAAIC,KAAK,GAAG,EAAE;AAEd,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAE7B,IAAIC,QAAQ,GAAGA,CAAA,KAAM;IACjBD,KAAK,CAACE,UAAU,CAACJ,KAAK,CAAC;EAC3B,CAAC;EAED,oBACQH,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAC,QAAA,EAChBJ,KAAK,CAACK,IAAI,CAACC,GAAG,CAAEC,EAAE,IACfA,EAAE,CAACD,GAAG,CAAEE,IAAI,KACRV,KAAK,CAACW,IAAI,CAACD,IAAI,CAAC,eAChBb,OAAA,CAAAE,SAAA;MAAAO,QAAA,gBACIT,OAAA;QAAKQ,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBT,OAAA;UAAAS,QAAA,EAAKI,IAAI,CAACE;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACrBnB,OAAA;UAAAS,QAAA,GAAI,QAAM,EAACI,IAAI,CAACO,YAAY;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA,GAFJN,IAAI,CAACQ,UAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAG3C,eACNnB,OAAA;QAAKQ,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBT,OAAA;UAAIQ,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEI,IAAI,CAACS;QAAa;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACpDnB,OAAA;UAAGQ,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEI,IAAI,CAACU;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACxCnB,OAAA,CAACF,IAAI;UACL0B,EAAE,EAAG,SAAQX,IAAK,EAAE;UACnBL,SAAS,EAAC,iBAAiB;UAC3BiB,OAAO,EAAEnB,QAAS;UAAAG,QAAA,EAEjB;QAEF,GAHMI,IAAI,CAACQ,UAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAGd;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT;IAAA,gBACP,CACN,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAGd,CAAC;AAAAO,EAAA,GAlCKtB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}