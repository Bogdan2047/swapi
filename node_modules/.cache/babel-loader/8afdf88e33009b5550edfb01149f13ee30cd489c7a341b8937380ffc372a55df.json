{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = deepCyclicCopyReplaceable;\nvar _prettyFormat = require('pretty-format');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst builtInObject = [Array, Date, Float32Array, Float64Array, Int16Array, Int32Array, Int8Array, Map, Set, RegExp, Uint16Array, Uint32Array, Uint8Array, Uint8ClampedArray];\nif (typeof Buffer !== 'undefined') {\n  builtInObject.push(Buffer);\n}\nconst isBuiltInObject = object => builtInObject.includes(object.constructor);\nconst isMap = value => value.constructor === Map;\nfunction deepCyclicCopyReplaceable(value) {\n  let cycles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new WeakMap();\n  if (typeof value !== 'object' || value === null) {\n    return value;\n  } else if (cycles.has(value)) {\n    return cycles.get(value);\n  } else if (Array.isArray(value)) {\n    return deepCyclicCopyArray(value, cycles);\n  } else if (isMap(value)) {\n    return deepCyclicCopyMap(value, cycles);\n  } else if (isBuiltInObject(value)) {\n    return value;\n  } else if (_prettyFormat.plugins.DOMElement.test(value)) {\n    return value.cloneNode(true);\n  } else {\n    return deepCyclicCopyObject(value, cycles);\n  }\n}\nfunction deepCyclicCopyObject(object, cycles) {\n  const newObject = Object.create(Object.getPrototypeOf(object));\n  const descriptors = Object.getOwnPropertyDescriptors(object);\n  cycles.set(object, newObject);\n  const newDescriptors = [...Object.keys(descriptors), ...Object.getOwnPropertySymbols(descriptors)].reduce(\n  //@ts-expect-error because typescript do not support symbol key in object\n  //https://github.com/microsoft/TypeScript/issues/1863\n  (newDescriptors, key) => {\n    const enumerable = descriptors[key].enumerable;\n    newDescriptors[key] = {\n      configurable: true,\n      enumerable,\n      value: deepCyclicCopyReplaceable(\n      // this accesses the value or getter, depending. We just care about the value anyways, and this allows us to not mess with accessors\n      // it has the side effect of invoking the getter here though, rather than copying it over\n      object[key], cycles),\n      writable: true\n    };\n    return newDescriptors;\n  }, {}); //@ts-expect-error because typescript do not support symbol key in object\n  //https://github.com/microsoft/TypeScript/issues/1863\n\n  return Object.defineProperties(newObject, newDescriptors);\n}\nfunction deepCyclicCopyArray(array, cycles) {\n  const newArray = new (Object.getPrototypeOf(array).constructor)(array.length);\n  const length = array.length;\n  cycles.set(array, newArray);\n  for (let i = 0; i < length; i++) {\n    newArray[i] = deepCyclicCopyReplaceable(array[i], cycles);\n  }\n  return newArray;\n}\nfunction deepCyclicCopyMap(map, cycles) {\n  const newMap = new Map();\n  cycles.set(map, newMap);\n  map.forEach((value, key) => {\n    newMap.set(key, deepCyclicCopyReplaceable(value, cycles));\n  });\n  return newMap;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","deepCyclicCopyReplaceable","_prettyFormat","require","builtInObject","Array","Date","Float32Array","Float64Array","Int16Array","Int32Array","Int8Array","Map","Set","RegExp","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","Buffer","push","isBuiltInObject","object","includes","constructor","isMap","cycles","arguments","length","undefined","WeakMap","has","get","isArray","deepCyclicCopyArray","deepCyclicCopyMap","plugins","DOMElement","test","cloneNode","deepCyclicCopyObject","newObject","create","getPrototypeOf","descriptors","getOwnPropertyDescriptors","set","newDescriptors","keys","getOwnPropertySymbols","reduce","key","enumerable","configurable","writable","defineProperties","array","newArray","i","map","newMap","forEach"],"sources":["/Users/Bohdan/Desktop/swap/node_modules/jest-matcher-utils/build/deepCyclicCopyReplaceable.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = deepCyclicCopyReplaceable;\n\nvar _prettyFormat = require('pretty-format');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst builtInObject = [\n  Array,\n  Date,\n  Float32Array,\n  Float64Array,\n  Int16Array,\n  Int32Array,\n  Int8Array,\n  Map,\n  Set,\n  RegExp,\n  Uint16Array,\n  Uint32Array,\n  Uint8Array,\n  Uint8ClampedArray\n];\n\nif (typeof Buffer !== 'undefined') {\n  builtInObject.push(Buffer);\n}\n\nconst isBuiltInObject = object => builtInObject.includes(object.constructor);\n\nconst isMap = value => value.constructor === Map;\n\nfunction deepCyclicCopyReplaceable(value, cycles = new WeakMap()) {\n  if (typeof value !== 'object' || value === null) {\n    return value;\n  } else if (cycles.has(value)) {\n    return cycles.get(value);\n  } else if (Array.isArray(value)) {\n    return deepCyclicCopyArray(value, cycles);\n  } else if (isMap(value)) {\n    return deepCyclicCopyMap(value, cycles);\n  } else if (isBuiltInObject(value)) {\n    return value;\n  } else if (_prettyFormat.plugins.DOMElement.test(value)) {\n    return value.cloneNode(true);\n  } else {\n    return deepCyclicCopyObject(value, cycles);\n  }\n}\n\nfunction deepCyclicCopyObject(object, cycles) {\n  const newObject = Object.create(Object.getPrototypeOf(object));\n  const descriptors = Object.getOwnPropertyDescriptors(object);\n  cycles.set(object, newObject);\n  const newDescriptors = [\n    ...Object.keys(descriptors),\n    ...Object.getOwnPropertySymbols(descriptors)\n  ].reduce(\n    //@ts-expect-error because typescript do not support symbol key in object\n    //https://github.com/microsoft/TypeScript/issues/1863\n    (newDescriptors, key) => {\n      const enumerable = descriptors[key].enumerable;\n      newDescriptors[key] = {\n        configurable: true,\n        enumerable,\n        value: deepCyclicCopyReplaceable(\n          // this accesses the value or getter, depending. We just care about the value anyways, and this allows us to not mess with accessors\n          // it has the side effect of invoking the getter here though, rather than copying it over\n          object[key],\n          cycles\n        ),\n        writable: true\n      };\n      return newDescriptors;\n    },\n    {}\n  ); //@ts-expect-error because typescript do not support symbol key in object\n  //https://github.com/microsoft/TypeScript/issues/1863\n\n  return Object.defineProperties(newObject, newDescriptors);\n}\n\nfunction deepCyclicCopyArray(array, cycles) {\n  const newArray = new (Object.getPrototypeOf(array).constructor)(array.length);\n  const length = array.length;\n  cycles.set(array, newArray);\n\n  for (let i = 0; i < length; i++) {\n    newArray[i] = deepCyclicCopyReplaceable(array[i], cycles);\n  }\n\n  return newArray;\n}\n\nfunction deepCyclicCopyMap(map, cycles) {\n  const newMap = new Map();\n  cycles.set(map, newMap);\n  map.forEach((value, key) => {\n    newMap.set(key, deepCyclicCopyReplaceable(value, cycles));\n  });\n  return newMap;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}