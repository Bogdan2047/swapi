{"ast":null,"code":"var _s = $RefreshSig$();\nimport react, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nconst src = 'https://swapi.dev/api/films';\nexport const Info = () => {\n  _s();\n  const params = useParams();\n  const filmId = params.id;\n  let [film, setFilm] = useState([]);\n  useEffect(() => {\n    axios.get(src).then(data => {\n      console.log(data);\n      setFilm(data.data.results);\n    });\n  }, []);\n  let findFilm = film.find(item => {\n    if (item.episode_id == filmId) {\n      return true;\n    }\n  });\n\n  // return(\n  // <div class=\"card text-center\">\n  //     <div class=\"card-header\">\n  //         <h2>{findFilm.title}</h2>\n  //         <h4>Year: {findFilm.release_date}</h4>\n  //     </div>\n  //     <div class=\"card-body\">\n  //         <h5 class=\"card-title\">{findFilm.opening_crawl}</h5>\n  //         <h4 class=\"card-text\">Director: {findFilm.director}</h4>\n  //     </div>\n  //     <div class=\"card-footer text-muted\">\n  //         2 дня спустя\n  //     </div>\n  // </div>\n  // )\n};\n_s(Info, \"WavomS7iKvrQtWy1CeYaunoL4Zk=\", false, function () {\n  return [useParams];\n});\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["react","useState","axios","useEffect","useParams","src","Info","_s","params","filmId","id","film","setFilm","get","then","data","console","log","results","findFilm","find","item","episode_id","_c","$RefreshReg$"],"sources":["/Users/Bohdan/Desktop/swap/src/context/info.js"],"sourcesContent":["import react, { useState } from \"react\"\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\n\nconst src = 'https://swapi.dev/api/films';\n\nexport const Info = () => {\n\nconst params = useParams();\nconst filmId = params.id;\n\n\n let [film, setFilm] = useState([])\n\n    useEffect(()=> {\n        axios\n            .get(src)\n            .then(data => {\n                console.log(data);\n                setFilm(data.data.results);\n            })\n    },[]);\n\n\nlet findFilm = film.find((item) => {\n    if(item.episode_id == filmId){\n        return true\n    }\n})\n\n\n    // return(\n        // <div class=\"card text-center\">\n        //     <div class=\"card-header\">\n        //         <h2>{findFilm.title}</h2>\n        //         <h4>Year: {findFilm.release_date}</h4>\n        //     </div>\n        //     <div class=\"card-body\">\n        //         <h5 class=\"card-title\">{findFilm.opening_crawl}</h5>\n        //         <h4 class=\"card-text\">Director: {findFilm.director}</h4>\n        //     </div>\n        //     <div class=\"card-footer text-muted\">\n        //         2 дня спустя\n        //     </div>\n        // </div>\n    // )\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,cAAc;AAExC,MAAMC,GAAG,GAAG,6BAA6B;AAEzC,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1B,MAAMK,MAAM,GAAGD,MAAM,CAACE,EAAE;EAGvB,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE/BE,SAAS,CAAC,MAAK;IACXD,KAAK,CACAW,GAAG,CAACR,GAAG,CAAC,CACRS,IAAI,CAACC,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBH,OAAO,CAACG,IAAI,CAACA,IAAI,CAACG,OAAO,CAAC;IAC9B,CAAC,CAAC;EACV,CAAC,EAAC,EAAE,CAAC;EAGT,IAAIC,QAAQ,GAAGR,IAAI,CAACS,IAAI,CAAEC,IAAI,IAAK;IAC/B,IAAGA,IAAI,CAACC,UAAU,IAAIb,MAAM,EAAC;MACzB,OAAO,IAAI;IACf;EACJ,CAAC,CAAC;;EAGE;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;AACJ,CAAC;AAAAF,EAAA,CAxCYD,IAAI;EAAA,QAEFF,SAAS;AAAA;AAAAmB,EAAA,GAFXjB,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}