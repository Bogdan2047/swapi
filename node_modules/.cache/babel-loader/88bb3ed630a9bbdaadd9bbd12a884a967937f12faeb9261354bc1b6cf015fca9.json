{"ast":null,"code":"var _jsxFileName = \"/Users/Bohdan/Desktop/swap/src/context/info.js\",\n  _s = $RefreshSig$();\nimport react, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst src = 'https://swapi.dev/api/films';\nexport const Info = props => {\n  _s();\n  const params = useParams();\n  const filmId = params.id;\n  let [film, setFilm] = useState([]);\n  useEffect(() => {\n    axios.get(src).then(data => {\n      setFilm(data.data.results);\n    });\n  }, []);\n  let findFilm = film.find(item => {\n    if (item.episode_id == filmId) {\n      return true;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"card text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-header\",\n      children: [findFilm.title, /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Year: \", findFilm.edite]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        class: \"card-title\",\n        children: findFilm.opening_crawl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-footer text-muted\",\n      children: \"2 \\u0434\\u043D\\u044F \\u0441\\u043F\\u0443\\u0441\\u0442\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Info, \"WavomS7iKvrQtWy1CeYaunoL4Zk=\", false, function () {\n  return [useParams];\n});\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["react","useState","axios","useEffect","useParams","jsxDEV","_jsxDEV","src","Info","props","_s","params","filmId","id","film","setFilm","get","then","data","results","findFilm","find","item","episode_id","class","children","title","edite","fileName","_jsxFileName","lineNumber","columnNumber","opening_crawl","_c","$RefreshReg$"],"sources":["/Users/Bohdan/Desktop/swap/src/context/info.js"],"sourcesContent":["import react, { useState } from \"react\"\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\n\nconst src = 'https://swapi.dev/api/films';\n\nexport const Info = (props) => {\n\nconst params = useParams();\nconst filmId = params.id;\n\n\n let [film, setFilm] = useState([])\n\n    useEffect(()=> {\n        axios\n            .get(src)\n            .then(data => {\n                setFilm(data.data.results);\n            })\n    },[]);\n\nlet findFilm = film.find((item) => {\n    if(item.episode_id == filmId){\n        return true\n    }\n})\n\n\n    return(\n        <div class=\"card text-center\">\n            <div class=\"card-header\">\n                {findFilm.title}\n                <h4>Year: {findFilm.edite}</h4>\n            </div>\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{findFilm.opening_crawl}</h5>\n                <p class=\"card-text\"></p>\n            </div>\n            <div class=\"card-footer text-muted\">\n                2 дня спустя\n            </div>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAG,6BAA6B;AAEzC,OAAO,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE/B,MAAMC,MAAM,GAAGP,SAAS,EAAE;EAC1B,MAAMQ,MAAM,GAAGD,MAAM,CAACE,EAAE;EAGvB,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE/BE,SAAS,CAAC,MAAK;IACXD,KAAK,CACAc,GAAG,CAACT,GAAG,CAAC,CACRU,IAAI,CAACC,IAAI,IAAI;MACVH,OAAO,CAACG,IAAI,CAACA,IAAI,CAACC,OAAO,CAAC;IAC9B,CAAC,CAAC;EACV,CAAC,EAAC,EAAE,CAAC;EAET,IAAIC,QAAQ,GAAGN,IAAI,CAACO,IAAI,CAAEC,IAAI,IAAK;IAC/B,IAAGA,IAAI,CAACC,UAAU,IAAIX,MAAM,EAAC;MACzB,OAAO,IAAI;IACf;EACJ,CAAC,CAAC;EAGE,oBACIN,OAAA;IAAKkB,KAAK,EAAC,kBAAkB;IAAAC,QAAA,gBACzBnB,OAAA;MAAKkB,KAAK,EAAC,aAAa;MAAAC,QAAA,GACnBL,QAAQ,CAACM,KAAK,eACfpB,OAAA;QAAAmB,QAAA,GAAI,QAAM,EAACL,QAAQ,CAACO,KAAK;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B,eACNzB,OAAA;MAAKkB,KAAK,EAAC,WAAW;MAAAC,QAAA,gBAClBnB,OAAA;QAAIkB,KAAK,EAAC,YAAY;QAAAC,QAAA,EAAEL,QAAQ,CAACY;MAAa;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACpDzB,OAAA;QAAGkB,KAAK,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,eACNzB,OAAA;MAAKkB,KAAK,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAEpC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAArB,EAAA,CAtCYF,IAAI;EAAA,QAEFJ,SAAS;AAAA;AAAA6B,EAAA,GAFXzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}